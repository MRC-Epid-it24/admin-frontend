.property
	h3 #{ gettext("Definition") }
	.input-wrapper
		label #{ gettext("Description") }
		input(id='input-category-englishDescription' type='text' placeholder='#{ gettext("Beans on toast") }' ng-model='itemDefinition.englishDescription')
	.input-wrapper(ng-hide='sharedData.locale.intake_locale=="en_GB"')
		label #{ gettext("Local Description") }
		input(id='input-food-localeDescription' type='text' ng-model='localDescriptionGetOrSet()' ng-model-options='{ getterSetter : true}')
	.input-wrapper
		label #{ gettext("Intake24 code") }
		input(id='input-category-code' type='text' placeholder='#{ gettext("ALBU") }' ng-model='itemDefinition.code')
	.input-wrapper
		label #{ gettext("Hidden") }
		input(id='input-is-hidden' type='checkbox' ng-model='itemDefinition.isHidden')

.property
	h3 #{ gettext("Attributes") }
	.input-wrapper.overridable
		button.override-button(ng-click='itemDefinition.attributes.readyMealOption.defined = !itemDefinition.attributes.readyMealOption.defined')
			span(ng-if='!(itemDefinition.attributes.readyMealOption.defined)') Override
			span(ng-if='(itemDefinition.attributes.readyMealOption.defined)') Use inherited
		input(ng-disabled='!itemDefinition.attributes.readyMealOption.defined' id='input-ready-meal-option' type='checkbox' ng-model='itemDefinition.attributes.readyMealOption.value')
		label #{ gettext("Ready meal option") }
	.input-wrapper.overridable
		button.override-button(ng-click='itemDefinition.attributes.sameAsBeforeOption.defined = !itemDefinition.attributes.sameAsBeforeOption.defined')
			span(ng-if='!(itemDefinition.attributes.sameAsBeforeOption.defined)') Override
			span(ng-if='(itemDefinition.attributes.sameAsBeforeOption.defined)') Use inherited
		input(ng-disabled='!itemDefinition.attributes.sameAsBeforeOption.defined' id='input-same-as-before-option' type='checkbox' ng-model='itemDefinition.attributes.sameAsBeforeOption.value')
		label #{ gettext("Same as before option") }
	.input-wrapper.overridable
		button.override-button(ng-click='itemDefinition.attributes.reasonableAmount.defined = !itemDefinition.attributes.reasonableAmount.defined')
			span(ng-if='!(itemDefinition.attributes.reasonableAmount.defined)') Override
			span(ng-if='(itemDefinition.attributes.reasonableAmount.defined)') Use inherited
		input(ng-disabled='!itemDefinition.attributes.reasonableAmount.defined' id='input-reasonable-amount' type='text' placeholder='#{ gettext("e.g. 600") }' style='min-width:60px; width:60px' ng-model='itemDefinition.attributes.reasonableAmount.value')
		label #{ gettext("Reasonable amount (g/ml)") }

.property
	h3 #{ gettext("Categories") }
	.categories-container
		ul(ng-repeat='category in parentCategories | orderBy:"displayName"')
			li {{category.displayName}}

	.input-wrapper
		.intake-btn.success(onClick='showDrawer("drawer-manage-categories")')
			span #{ gettext("Manage categories") }
		.clearfloat

.property
	h3 #{ gettext("Portion size estimation") }
	.input-wrapper(ng-model='itemDefinition.localData.portionSize' ng-repeat='portionSize in itemDefinition.localData.portionSize')
		.portion-size-method
			.input-wrapper
				label #{ gettext("Description") }
				input(placeholder='#{ gettext("Description") }' ng-model='portionSize.description')
			.input-wrapper
				label #{ gettext("Image") }
				input(placeholder='#{ gettext("e.g. path/filename.jpg") }' ng-model='portionSize.imageUrl')
			.input-wrapper
				label #{ gettext("Use for recipes") }
				input(type='checkbox' ng-model='portionSize.useForRecipes')
			.input-wrapper
				label #{ gettext("Estimation method") }
				select(class='estimation-method-dropdown' id='estimation-method-dropdown' data-ng-model="portionSize.method")
					option(ng-repeat="estimationMethod in sharedData.estimationMethods" value="{{estimationMethod.slug}}") {{estimationMethod.name}}

			.as-served(ng-if='portionSize.method == "as-served"')
				include portion-size-methods/as-served
			.guide-image(ng-if='portionSize.method == "guide-image"')
				include portion-size-methods/guide-image
			.drink-scale(ng-if='portionSize.method == "drink-scale"')
				include portion-size-methods/drink-scale
			.standard-portion(ng-if='portionSize.method == "standard-portion"')
				include portion-size-methods/standard-portion
			.cereal(ng-if='portionSize.method == "cereal"')
				include portion-size-methods/cereal
			.milk-on-cereal(ng-if='portionSize.method == "milk-on-cereal"')
				include portion-size-methods/milk-on-cereal
			.milk-on-cereal(ng-if='portionSize.method == "milk-in-a-hot-drink"')
				include portion-size-methods/milk-in-a-hot-drink
			.milk-on-cereal(ng-if='portionSize.method == "pizza"')
				include portion-size-methods/pizza

			.intake-btn.danger(ng-click='deletePortionSize(itemDefinition.localData.portionSize, $index)')
				span #{ gettext("Delete this method") }
			.clearfloat
				

	.input-wrapper
		.intake-btn.success(ng-click='addPortionSize(itemDefinition.localData.portionSize)')
			span #{ gettext("Add a portion size method") }
		.intake-btn.success(ng-hide='sharedData.locale.intake_locale=="en_GB"' ng-click='copyEnglishMethods()')
			span #{ gettext("Copy English methods") }
		.clearfloat
